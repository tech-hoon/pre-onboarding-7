{"version":3,"sources":["components/common/Loading.tsx","components/common/Spinner.tsx","components/todo/template/TodoTemplate.tsx","components/todo/template/head/TodoHead.tsx","components/todo/TodoService.ts","components/todo/template/list/item/TodoItem.tsx","components/todo/template/list/TodoList.tsx","components/todo/template/create/TodoCreate.tsx","components/todo/template/footer/TodoFooter.tsx","components/todo/TodoContainer.tsx","App.tsx","components/utils/localStorage.js","index.js"],"names":["Loading","props","LoadingOutlined","style","fontSize","size","spin","Spinner","tip","delay","mask","StyledSpinnerWrapper","className","justify","align","indicator","defaultProps","styled","Row","styleProps","TodoTemplate","TodoTemplateBlock","children","div","React","memo","TodoHead","time","useState","Date","toLocaleString","setTime","useEffect","timer","setInterval","clearInterval","useTimer","TodoHeadBlock","TimerText","TodoItem","toggleTodo","removeTodo","todo","id","text","dueDate","done","TodoItemBlock","CheckCircle","onClick","handleToggle","CheckOutlined","Text","DueDate","Remove","handleRemove","DeleteOutlined","css","TodoList","todos","TodoListBlock","map","i","TodoCreate","nextId","validateInput","createTodo","open","setOpen","value","setValue","setDueDate","modalVisible","setModalVisible","modalMsg","setModalMsg","handleModal","InsertFormPositioner","InsertForm","onSubmit","e","preventDefault","Input","autoFocus","placeholder","onChange","target","maxLength","CircleButton","PlusCircleOutlined","DatePickerStyled","_","dateString","moment","visible","onOk","onCancel","closable","button","form","input","DatePicker","Todofooter","undoneTasks","filter","TodoFooterBlock","LeftText","length","TodoContainer","todoState","setTodoState","setNextId","data","localStorage","getItem","JSON","parse","loadData","setItem","stringify","newArr","forEach","idx","splice","prevId","prevState","useTodo","TodoFooter","App","isLogged","setIsLogged","type","storage","window","x","removeItem","DOMException","code","name","storageAvailable","isAvailable","setTimeout","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9441969e.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { SpinSize } from 'antd/lib/spin';\n\ninterface ILoadingProps {\n\tsize?: SpinSize;\n\tstyle?: React.CSSProperties;\n}\n\nexport default function Loading(props: ILoadingProps): ReactElement {\n\treturn <LoadingOutlined style={{ fontSize: props.size === 'large' ? 48 : 24, ...props.style }} spin />;\n}\n","import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { Spin, Row, Col } from 'antd';\nimport { SpinSize } from 'antd/lib/spin';\nimport Loading from './Loading';\n\ninterface ISpinnerProps {\n  tip?: string;\n  size?: SpinSize;\n  delay?: number;\n  style?: React.CSSProperties;\n  mask?: boolean;\n}\n\ninterface IWrapperProp {\n  ['data-mask']: boolean;\n}\n\nfunction Spinner(props: ISpinnerProps): ReactElement {\n  const { tip, size, delay, style, mask = false } = props;\n\n  return (\n    <StyledSpinnerWrapper\n      className='spinner-wrap'\n      justify='center'\n      align='middle'\n      style={style}\n      data-mask={mask}\n    >\n      <Col>\n        <Spin indicator={<Loading size={size} />} delay={delay} tip={tip} size={size} />\n      </Col>\n    </StyledSpinnerWrapper>\n  );\n}\n\nSpinner.defaultProps = {\n  tip: '로딩중입니다.',\n  size: 'large',\n  delay: 0,\n  style: {},\n  mask: false,\n};\n\nconst StyledSpinnerWrapper = styled(Row)<IWrapperProp>`\n  background-color: ${(styleProps) =>\n    styleProps['data-mask'] ? 'rgba(0, 0, 0, 0.1)' : 'transparent'};\n  height: 100vh;\n`;\n\nexport default Spinner;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction TodoTemplate(props: any) {\n  return <TodoTemplateBlock>{props.children}</TodoTemplateBlock>;\n}\n\nconst TodoTemplateBlock = styled.div`\n  width: 70%;\n  height: 800px;\n\n  min-width: 360px;\n  max-width: 700px;\n\n  position: relative;\n  background: white;\n  border-radius: 30px;\n  box-shadow: 0 0 50px 0 rgba(0, 0, 0, 0.1);\n\n  margin: 0 auto;\n\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default React.memo(TodoTemplate);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTimer } from '../../TodoService';\n\nconst TodoHead = () => {\n  const time = useTimer();\n\n  return (\n    <TodoHeadBlock>\n      <TimerText>{time}</TimerText>\n    </TodoHeadBlock>\n  );\n};\n\nconst TodoHeadBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 52px;\n  padding-bottom: 24px;\n  border-bottom: 3px solid #33bb77;\n`;\n\nconst TimerText = styled.div`\n  font-size: 26px;\n  color: #119955;\n  padding-left: 10px;\n`;\n\nexport default React.memo(TodoHead);\n","import { useState, useEffect } from 'react';\n\nexport type Itodo = {\n  id: number;\n  text: string;\n  done: boolean;\n  dueDate: string;\n};\n\nexport const useTimer = () => {\n  const [time, setTime] = useState(new Date().toLocaleString());\n  useEffect(() => {\n    const timer = setInterval(() => setTime(new Date().toLocaleString()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n  return time;\n};\n\nexport const useTodo = () => {\n  const [todoState, setTodoState] = useState<Itodo[]>([]);\n  const [nextId, setNextId] = useState<number>(1);\n\n  useEffect(() => {\n    const loadData = () => {\n      const data = localStorage.getItem('todos');\n      if (data === null || data === '[]') return;\n\n      const todos = JSON.parse(data);\n      setTodoState(todos);\n      setNextId(todos[todos.length - 1].id + 1);\n    };\n\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    const saveData = () => {\n      localStorage.setItem('todos', JSON.stringify(todoState));\n    };\n\n    saveData();\n  }, [todoState]);\n\n  const validateInput = (text: string, dueDate: string) => {\n    if (!text || !dueDate) return false;\n    else return true;\n  };\n\n  const toggleTodo = (id: number) => {\n    todoState.map((todo) => {\n      if (todo.id === id) todo.done = !todo.done;\n      return todo;\n    });\n\n    setTodoState([...todoState]);\n  };\n\n  const removeTodo = (id: number) => {\n    const newArr = [...todoState];\n    newArr.forEach((todo, idx) => todo.id === id && newArr.splice(idx, 1));\n    setTodoState(newArr);\n  };\n\n  const createTodo = (todo: Itodo) => {\n    setNextId((prevId) => prevId + 1);\n    setTodoState((prevState) => [...prevState, { ...todo, id: nextId }]);\n  };\n\n  return {\n    nextId,\n    todoState,\n    validateInput,\n    toggleTodo,\n    removeTodo,\n    createTodo,\n  };\n};\n","import { CheckOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Itodo } from '../../../TodoService';\nimport React from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface TodoItemProps {\n  toggleTodo: (id: number) => void;\n  removeTodo: (id: number) => void;\n  todo: Itodo;\n}\n\nconst TodoItem = ({ toggleTodo, removeTodo, todo: { id, text, dueDate, done } }: TodoItemProps) => {\n  const handleToggle = (id: number) => toggleTodo(id);\n  const handleRemove = (id: number) => removeTodo(id);\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={() => handleToggle(id)}>\n        {done && <CheckOutlined />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <DueDate done={done}>Due Date {dueDate}</DueDate>\n      <Remove onClick={() => handleRemove(id)}>\n        <DeleteOutlined />\n      </Remove>\n    </TodoItemBlock>\n  );\n};\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #119955;\n  font-size: 16px;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  &:hover {\n    ${Remove} {\n      display: initial;\n    }\n  }\n`;\n\nconst CheckCircle = styled.div<{ done: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 16px;\n  border: 1px solid #33bb77;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #dddddd;\n      color: #dddddd;\n    `}\n`;\n\nconst Text = styled.div<{ done: boolean }>`\n  flex: 1;\n  font-size: 16px;\n  color: #119955;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n      text-decoration: line-through;\n    `}\n`;\n\nconst DueDate = styled.div<{ done: boolean }>`\n  flex: 1;\n  font-size: 16px;\n  color: #119955;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n      text-decoration: line-through;\n    `}\n`;\n\nexport default React.memo(TodoItem);\n","import { Itodo } from '../../TodoService';\nimport React from 'react';\nimport styled from 'styled-components';\nimport TodoItem from './item/TodoItem';\n\ninterface TodoListProps {\n  todos: Itodo[];\n  toggleTodo: (id: number) => void;\n  removeTodo: (id: number) => void;\n}\n\nconst TodoList = ({ toggleTodo, removeTodo, todos }: TodoListProps) => {\n  return (\n    <TodoListBlock>\n      {todos &&\n        todos.map((todo, i) => (\n          <TodoItem toggleTodo={toggleTodo} removeTodo={removeTodo} key={i} todo={todo} />\n        ))}\n    </TodoListBlock>\n  );\n};\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nexport default React.memo(TodoList);\n","import 'antd/dist/antd.css';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Itodo } from '../../TodoService';\nimport { DatePicker, Modal } from 'antd';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\ninterface TodoCreateProps {\n  nextId: number;\n  createTodo: (todo: Itodo) => void;\n  validateInput: (text: string, dueDate: string) => boolean;\n}\n\nconst TodoCreate = ({ nextId, validateInput, createTodo }: TodoCreateProps) => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState<string>('');\n  const [dueDate, setDueDate] = useState('');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalMsg, setModalMsg] = useState('');\n\n  const handleToggle = () => setOpen(!open);\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value);\n  const handleDueDate = (_: any, dateString: string) => setDueDate(dateString);\n  const handleModal = () => setModalVisible(!modalVisible);\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!validateInput(value, dueDate)) {\n      setModalMsg(`${!value ? `값을` : `날짜를`} 입력해주세요`);\n      handleModal();\n      return;\n    }\n\n    createTodo({\n      id: nextId,\n      text: value,\n      done: false,\n      dueDate: dueDate,\n    });\n\n    setValue('');\n    setDueDate('');\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <InsertFormPositioner>\n        <InsertForm onSubmit={handleSubmit}>\n          <Input\n            autoFocus\n            placeholder=\"What's need to be done?\"\n            onChange={handleChange}\n            value={value}\n            maxLength={20}\n          />\n\n          <CircleButton onClick={handleToggle} open={open}>\n            <PlusCircleOutlined />\n          </CircleButton>\n        </InsertForm>\n      </InsertFormPositioner>\n      <DatePickerStyled onChange={handleDueDate} value={dueDate !== '' ? moment(dueDate) : null} />\n      <Modal visible={modalVisible} onOk={handleModal} onCancel={handleModal} closable={true}>\n        {modalMsg}\n      </Modal>\n    </>\n  );\n};\n\nconst CircleButton = styled.button<{ open: boolean }>`\n  background: #33bb77;\n  width: 50px;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  left: 50%;\n  transform: translate(50%, 0%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #eeeeee;\n`;\n\nconst InsertForm = styled.form`\n  display: flex;\n  background: #eeeeee;\n  padding-left: 40px;\n  padding-top: 36px;\n  padding-right: 60px;\n  padding-bottom: 36px;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border: 1px solid #dddddd;\n  width: 100%;\n  outline: none;\n  font-size: 21px;\n  box-sizing: border-box;\n  color: #119955;\n  &::placeholder {\n    color: #dddddd;\n    font-size: 16px;\n  }\n`;\n\nconst DatePickerStyled = styled(DatePicker)`\n  padding: 24px 8px;\n`;\n\nexport default React.memo(TodoCreate);\n","import { Itodo } from '../../TodoService';\nimport React from 'react';\nimport styled from 'styled-components';\n\ninterface HooksTodoHeadProps {\n  todos: Itodo[];\n}\n\nconst Todofooter = ({ todos }: HooksTodoHeadProps) => {\n  const undoneTasks = todos.filter((todo) => !todo.done);\n  return (\n    <TodoFooterBlock>\n      <LeftText className='tasks-left'>{undoneTasks?.length} items left</LeftText>\n    </TodoFooterBlock>\n  );\n};\n\nconst TodoFooterBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 24px;\n  padding-bottom: 24px;\n`;\n\nconst LeftText = styled.div`\n  color: #33bb77;\n  font-size: 18px;\n`;\n\nexport default React.memo(Todofooter);\n","import { useTodo } from \"./TodoService\";\nimport TodoTemplate from \"./template/TodoTemplate\";\nimport TodoHead from \"./template/head/TodoHead\";\nimport TodoList from \"./template/list/TodoList\";\nimport TodoCreate from \"./template/create/TodoCreate\";\nimport TodoFooter from \"./template/footer/TodoFooter\";\n\nconst TodoContainer = () => {\n  const {\n    nextId,\n    todoState,\n    validateInput,\n    toggleTodo,\n    removeTodo,\n    createTodo\n  } = useTodo();\n\n  return (\n    <>\n      <TodoTemplate>\n        <TodoHead />\n        <TodoCreate\n          validateInput={validateInput}\n          createTodo={createTodo}\n          nextId={nextId}\n        />\n        <TodoList\n          toggleTodo={toggleTodo}\n          removeTodo={removeTodo}\n          todos={todoState}\n        />\n        <TodoFooter todos={todoState} />\n      </TodoTemplate>\n    </>\n  );\n};\n\nexport default TodoContainer;\n","import 'antd/dist/antd.css';\nimport { useState } from 'react';\nimport { storageAvailable } from './components/utils/localStorage';\nimport Spinner from './components/common/Spinner';\nimport TodoContainer from './components/todo/TodoContainer';\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAvailable] = useState(storageAvailable('localStorage'));\n\n  setTimeout(() => {\n    setIsLogged(true);\n  }, 1500);\n\n  if (!isAvailable) {\n    return <h1>지원하지 않는 브라우저입니다</h1>;\n  } else {\n    return isLogged ? <TodoContainer /> : <Spinner mask />;\n  }\n}\n\nexport default App;\n","export function storageAvailable(type) {\n  let storage;\n  try {\n    storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e instanceof DOMException &&\n      (e.code === 22 ||\n        e.code === 1014 ||\n        e.name === 'QuotaExceededError' ||\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from \"./App\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #eeeeee;\n  }\n`;\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}